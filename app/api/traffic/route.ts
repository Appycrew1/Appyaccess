import { NextResponse } from "next/server";import { fetchTfLDisruptions } from "@/connectors/traffic/tfl";import { fetchNationalHighwaysDATEX, datexToEvents } from "@/connectors/traffic/national_highways";import { fetchCityClosures } from "@/connectors/traffic/city_of_london";import { fetchArcGISRoadworks } from "@/connectors/traffic/arcgis";import type { TrafficEvent } from "@/types";
export async function POST(req:Request){const {lat,lng,radiusKm=5}=await req.json().catch(()=>({}));const out:{events:TrafficEvent[];raw:any}={events:[],raw:{}};const tfl=await fetchTfLDisruptions();out.raw.tfl=tfl;out.events.push(...(tfl||[]).map((d:any)=>({id:String(d.id||d.link||Math.random()),source:"TfL",title:d.comments||d.category||d.corridorIds?.join(", "),category:d.category,status:d.status,start:d.startDateTime,end:d.endDateTime,url:d.url||d.link||"https://api.tfl.gov.uk/",point:d.point?{lat:d.point.lat,lng:d.point.lon}:null})));const nhXml=await fetchNationalHighwaysDATEX();out.raw.nationalHighways=nhXml;const nhEvents=datexToEvents(nhXml);out.events.push(...nhEvents.map((e:any)=>({id:e.id,source:"National Highways",title:e.title,category:e.category,start:e.start,end:e.end,point:e.point||null})));const city=await fetchCityClosures();out.raw.city=city;out.events.push(...(city||[]).map((c:any,i:number)=>({id:`city-${i}`,source:"City of London",title:c.title||c.location,start:c.date,url:c.source,point:null})));const arc=(lat&&lng)?await fetchArcGISRoadworks(lat,lng,radiusKm):[];out.raw.arcgis=arc;out.events.push(...arc.map((a:any,i:number)=>({id:`arc-${i}`,source:`ArcGIS`,title:a.feature?.attributes?.Description||a.feature?.attributes?.TITLE||"Roadwork",start:a.feature?.attributes?.StartDate||a.feature?.attributes?.STARTDATE,end:a.feature?.attributes?.EndDate||a.feature?.attributes?.ENDDATE,point:a.feature?.geometry?.y&&a.feature?.geometry?.x?{lat:a.feature.geometry.y,lng:a.feature.geometry.x}:null})));return NextResponse.json(out);} 
