"use client";
import { useEffect, useRef } from "react";import { useGoogleMaps } from "./GoogleLoader";import type { PlaceLite } from "@/types";
export default function AddressAutocomplete({id,label,placeholder,value,onChange,onPlaceResolved}:{id:string;label:string;placeholder:string;value:string;onChange:(v:string)=>void;onPlaceResolved:(p:PlaceLite|null)=>void}){const ready=useGoogleMaps();const inputRef=useRef<HTMLInputElement|null>(null);const acRef=useRef<google.maps.places.Autocomplete|null>(null);useEffect(()=>{if(!ready||!inputRef.current||acRef.current)return;acRef.current=new google.maps.places.Autocomplete(inputRef.current!,{fields:["place_id","formatted_address","geometry","name","types"]});acRef.current.addListener("place_changed",()=>{const p=acRef.current!.getPlace();if(!p.place_id||!p.geometry?.location){onPlaceResolved(null);return;}const lat=p.geometry.location.lat(),lng=p.geometry.location.lng();const types:any[]=p.types||[];onPlaceResolved({place_id:p.place_id,description:p.name||p.formatted_address||"Selected place",address:p.formatted_address||undefined,lat,lng,types});});},[ready]);return(<div className="space-y-1"><label htmlFor={id} className="label">{label}</label><input id={id} ref={inputRef} className="input" placeholder={placeholder} value={value} onChange={e=>onChange(e.target.value)} /><p className="text-xs" style={{opacity:.7}}>Start typing and <span style={{textDecoration:'underline'}}>select a suggestion</span>.</p></div>);}
